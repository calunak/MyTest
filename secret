To-Do: Fix the Qapplication error by installing qt dev tools on centos8


127.0.0.1:8080
username: admin
password: admin

Webhook tut begint 11:30 (zorgt voor dat je niet zelf 'build' moet klikken in jenkins telkens als je iets commit naar de git):
https://www.youtube.com/watch?v=FHPtchw-eHA&ab_channel=TheCherno

Getting started:
https://www.jenkins.io/doc/pipeline/tour/getting-started/

This covers how to install Jenkins on a CentOS8 machine server(GUI) on VMware.
CentOS is rhel, so we follow this guide:
https://pkg.jenkins.io/redhat-stable/

We need a JRE, the website tells us oracle fails so we need to install openJDK:
sudo yum install java-1.8.0-openjdk

Now we need to download the .WAR file:
https://www.jenkins.io/download/

and run it with:
java -jar jenkins.war --httpPort=8080


If you restart centOS and jenkins still runs, check:
fuser 8080/tcp
then close it:
fuser -k 8080/tcp

Installing Qt on CentOS:
Preperation (installing basic requirements):
sudo yum groupinstall "C Development Tools and Libraries"
sudo yum install mesa-libGL-devel

https://wiki.qt.io/How_to_Install_Qt_5_and_Qwt_on_CentOS_6


Installing and configuring CMake: (More clips on the channel)
Reqs (do this after having installed CMake)
yum install -y gcc
yum install -y make
export CXX=/usr/bin/g++
yum group install "Development Tools"

https://www.youtube.com/watch?v=_yFPO1ofyF0&ab_channel=vector-of-bool

cmake ..
CMakeLists.txt
Build folder


Configure github on local machine to use repo:
https://www.howtoforge.com/tutorial/install-git-and-github-on-ubuntu/

authenticating using ssh:
git remote set-url origin git@github.com:<username>/<reponame>.git
and then follow the following url for further instructions:
https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent

commit new file:
git add <file> OR git add *
git commit -m "new shizzle"
git push origin master

set(CMAKE_PREFIX_PATH "/opt/Qt/5.15.2/gcc_64/lib/")


CMakeList.txt
-----------------------------------------------------------------------
project(HCIServer)
cmake_minimum_required(VERSION 2.8)
set(CMAKE_CXX_STANDARD 11)

find_package(Qt5 REQUIRED COMPONENTS Core Widgets)
add_executable(${PROJECT_NAME} main.cpp mouseevent.cpp udpserver.cpp)
target_link_librarieS(${PROJECT_NAME} Qt5::Widgets)
-----------------------------------------------------------------------
MINE:

cmake_minimum_required(VERSION 3.20.3)
project(HELLO VERSION 1.0.0)
set(CMAKE_CXX_STANDARD 11)

find_package(Qt5 REQUIRED COMPONENTS Core Widgets)

add_executable(HELLO main.cp mainWindow.h channelWindow.cpp mainWindow.cpp channelWindow.h)
target_link_libraries(HELLO Qt5::Widgets)

-----------------------------------------------------------------------
main.cpp mainWindow.h channelWindow.cpp mainWindow.cpp channelWindow.h

set(CMAKE_AUTOMOC ON)


Qmake:
op centos:
qmake-qt5 qt5project.pro

daarna:
make 

















echo "
cmake_minimum_required(VERSION 3.20.3)
project(HELLO VERSION 1.0.0)
set(CMAKE_CXX_STANDARD 11)

find_package(Qt5 REQUIRED COMPONENTS Core Widgets)

add_executable(HELLO main.cp mainWindow.h channelWindow.cpp mainWindow.cpp channelWindow.h)
target_link_libraries(HELLO Qt5::Widgets)
" >> CMakeLists.txt
